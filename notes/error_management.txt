1. all errors should be returned to the frontend:
- files does not exist
- not a java file
- not compiling
    - file is empty
    - return a modal:
        Title: Compilation error
        Message: provided by the backend.
        To put in a code statement.
- throwing at execution time
    - have a red message inside the app directly - the message may be legit for the user
      see screenshot
      have links to copy, search on google, search on chatgpt
      https://chatgpt.com/?q=Exception%3A%20Sorry%2C%20no%20numbers%20below%20zero%0A%0AFile%20%22%2FUsers%2Fcyril%2Fprojects%2Fjavelit%2Fstreamlit_ref%2Fdebug.py%22%2C%20line%206%2C%20in%20%3Cmodule%3E%0A%20%20%20%20raise%20Exception(%22Sorry%2C%20no%20numbers%20below%20zero%22)
      https://www.google.com/search?q=Exception%3A%20Sorry%2C%20no%20numbers%20below%20zero
- ws disconnected - DONE
- TODO ADD others

2. Errors should look the same as Streamlit


####################
####################
WS connection closed disconnected:
Connection error
Is Streamlit still running? If you accidentally stopped Streamlit, just restart it in your terminal:
streamlit run yourscript.py

in a modal - the modal should not be closable
the modal should get closed when the connection is recovered


####################
####################
On WS connection closed then recreated --> states are lost. 
2 approaches: 
- persist state on backend, based on a session-id / cookie that will be generated by the frontend
- persist in frontend:
Maintain a JavaScript object that mirrors all component states.
1. Intercept all javelit.emit() calls to update local cache
2. Store in window.componentStates = {}
3. On reconnection, send entire cache to server


- have a border around a code snippet in markdown
- return full error message in all compilation error failure cases
- make sure to close the compilationError modal when new events are coming
- add copy and search links
