<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright Â© 2025 Cyril de Catheu (cdecatheu@hey.com)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.javelit</groupId>
        <artifactId>javelit-parent</artifactId>
        <version>0.59.0-SNAPSHOT</version>
    </parent>

    <artifactId>javelit</artifactId>
    <packaging>jar</packaging>

    <name>Javelit</name>
    <description>The fastest way to build data apps in Java - CLI and standalone server</description>

    <dependencies>
        <!-- Internal dependencies -->
        <dependency>
            <groupId>io.javelit</groupId>
            <artifactId>javelit-core</artifactId>
        </dependency>

        <!-- Logging (optional - included in fat jar) -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- Undertow Web Server -->
        <dependency>
            <groupId>io.undertow</groupId>
            <artifactId>undertow-core</artifactId>
        </dependency>
        <dependency>
            <groupId>io.undertow</groupId>
            <artifactId>undertow-servlet</artifactId>
        </dependency>
        <dependency>
            <groupId>io.undertow</groupId>
            <artifactId>undertow-websockets-jsr</artifactId>
        </dependency>

        <!-- CLI -->
        <dependency>
            <groupId>info.picocli</groupId>
            <artifactId>picocli</artifactId>
        </dependency>

        <!-- Annotations -->
        <dependency>
            <groupId>org.jetbrains</groupId>
            <artifactId>annotations</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Testing dependencies -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.microsoft.playwright</groupId>
            <artifactId>playwright</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.tngtech.archunit</groupId>
            <artifactId>archunit</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>

            <!-- minify some jsons -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>minify-echarts-themes</id>
                        <!-- not assigned to a phase - please run manually with ./mvnw antrun:run@minify-echarts-themes
                        <phase>process-resources</phase>
                        -->
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <replaceregexp match="\s+" replace="" flags="g">
                                    <fileset dir="${project.basedir}/src/main/resources/static/_javelit/components/chart">
                                        <include name="echarts_theme_*.json" />
                                    </fileset>
                                </replaceregexp>
                                <echo message="Minified ECharts theme files" />
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Configure test execution -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <workingDirectory>..</workingDirectory>
                    <argLine>-Djava.awt.headless=true</argLine>
                    <!-- tests are not flaky but they are run in parallel - see junit-platform.properties - parallel + timeouts may introduce flakyness -->
                    <!-- parallel + a few retries is faster than sequential -->
                    <rerunFailingTestsCount>5</rerunFailingTestsCount>
                </configuration>
            </plugin>

            <!-- Create test jar with E2E utilities -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                        <configuration>
                            <testClassesDirectory>${project.build.testOutputDirectory}</testClassesDirectory>
                            <includes>
                                <include>io/javelit/e2e/helpers/*.class</include>
                            </includes>
                            <excludes>
                                <exclude>io/javelit/e2e/core/**</exclude>
                                <exclude>io/javelit/e2e/components/**</exclude>
                                <exclude>io/javelit/core/**</exclude>
                                <exclude>multifile-test/**</exclude>
                                <exclude>multipage-test/**</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Main executable JAR with -all classifier -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <createDependencyReducedPom>false</createDependencyReducedPom>
                            <shadedArtifactAttached>true</shadedArtifactAttached>
                            <shadedClassifierName>all</shadedClassifierName>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>io.javelit.cli.Cli</mainClass>
                                    <manifestEntries>
                                        <Implementation-Version>${project.version}</Implementation-Version>
                                        <Implementation-Title>${project.name}</Implementation-Title>
                                    </manifestEntries>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- make parsedVersion available in maven release-plugin -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.6.1</version>
                <executions>
                    <execution>
                        <id>parse-versions-for-release</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>parse-version</goal>
                        </goals>
                        <configuration>
                            <propertyPrefix>parsedVersion</propertyPrefix>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- makes project metadata available in other plugin configs -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
                <version>3.2.1</version>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>create</goal>
                            <goal>create-metadata</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>release</id>
            <build>
                <plugins>
                    <!-- Source JAR -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                                <configuration>
                                    <includePom>true</includePom>
                                </configuration>
                            </execution>
                            <execution>
                                <id>attach-test-sources</id>
                                <goals>
                                    <goal>test-jar-no-fork</goal>
                                </goals>
                                <configuration>
                                    <includes>
                                        <include>io/javelit/e2e/helpers/**</include>
                                    </includes>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Build classpath for doclet -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>3.8.1</version>
                        <executions>
                            <execution>
                                <id>build-doclet-classpath</id>
                                <phase>compile</phase>
                                <goals>
                                    <goal>build-classpath</goal>
                                </goals>
                                <configuration>
                                    <outputProperty>doclet.classpath</outputProperty>
                                    <includeScope>compile</includeScope>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Javadoc JAR and JSON Documentation Generation -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <executions>
                            <!-- Standard Javadoc JAR -->
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                            <!-- JSON Documentation Generation -->
                            <execution>
                                <id>generate-json-docs</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>javadoc-no-fork</goal>
                                </goals>
                                <configuration>
                                    <doclet>io.javelit.doclet.JsonDoclet</doclet>
                                    <!--suppress MavenModelInspection --><!-- the doclet.classpath variable is set dynamically by the plugin above -->
                                    <docletPath>${project.build.outputDirectory}:${doclet.classpath}</docletPath>
                                    <useStandardDocletOptions>false</useStandardDocletOptions>
                                    <sourcepath>${project.build.sourceDirectory}</sourcepath>
                                    <subpackages>io.javelit.core:io.javelit.components</subpackages>
                                    <quiet>true</quiet>
                                </configuration>
                            </execution>
                        </executions>
                        <!-- Global configuration applied to both executions -->
                        <configuration>
                            <doclint>none</doclint>
                            <source>21</source>
                            <quiet>true</quiet>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
