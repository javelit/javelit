{{!
    Copyright Â© 2025 Cyril de Catheu (cdecatheu@hey.com)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
}}
<script type="module">
    import {LitElement, html, css} from '{{ LIT_DEPENDENCY }}';
    
    class JtColumns extends LitElement {
        static styles = css`
            :host {
                display: block;
                margin: var(--jt-spacing-md) 0;
            }
            
            .columns-container {
                display: flex;
                width: 100%;
                box-sizing: border-box;
            }
            
            /* Gap sizes */
            .gap-small { gap: calc(1 * var(--jt-font-size-base)); }
            .gap-medium { gap: calc(2 * var(--jt-font-size-base)); }
            .gap-large { gap: calc(4 * var(--jt-font-size-base)); }
            .gap-none { gap: 0; }
            
            /* Vertical alignment */
            .align-top { align-items: flex-start; }
            .align-center { align-items: center; }
            .align-bottom { align-items: flex-end; }
            
            .column {
                display: flex;
                flex-direction: column;
                box-sizing: border-box;
            }
            
            .column.border {
                border: 1px solid var(--jt-border-color);
                border-radius: var(--jt-border-radius);
                padding: var(--jt-spacing-md);
            }
        `;
        
        static properties = {
            numColumns: {type: Number, attribute: 'num-columns'},
            widths: {type: Array},
            gap: {type: String},
            verticalAlignment: {type: String, attribute: 'vertical-alignment'},
            border: {type: Boolean}
        };
        
        render() {
            const gapClass = `gap-${this.gap?.toLowerCase() || 'small'}`;
            const alignClass = `align-${this.verticalAlignment?.toLowerCase() || 'top'}`;
            
            // Generate columns with appropriate widths
            const columns = [];
            for (let i = 0; i < this.numColumns; i++) {
                const width = this.widths && this.widths[i] 
                    ? `${(this.widths[i] * 100)}%`
                    : `${100 / this.numColumns}%`;
                
                columns.push(html`
                    <div 
                        class="column ${this.border ? 'border' : ''}"
                        style="flex-basis: ${width};"
                    >
                        <slot name="col_${i}"></slot>
                    </div>
                `);
            }
            
            return html`
                <div class="columns-container ${gapClass} ${alignClass}">
                    ${columns}
                </div>
            `;
        }
    }
    
    customElements.define('jt-columns', JtColumns);
</script>